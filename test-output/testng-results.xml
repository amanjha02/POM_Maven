<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="9" passed="6">
  <reporter-output>
    <line>
      <![CDATA[Test started running:FailedtestCase1 at:16]]>
    </line>
    <line>
      <![CDATA[Test started running:PassedTestCaseTest at:16]]>
    </line>
    <line>
      <![CDATA[Test started running:passedtestCase at:16]]>
    </line>
    <line>
      <![CDATA[Test started running:ValidateLoginTestcaseWithInValidData at:16]]>
    </line>
    <line>
      <![CDATA[Test started running:ValidateLoginTestcaseWithValidData at:16]]>
    </line>
    <line>
      <![CDATA[Test started running:ValidateLoginTestcaseWithValidandInvalidData at:16]]>
    </line>
    <line>
      <![CDATA[Test started running:validateEcomercesite at:16]]>
    </line>
    <line>
      <![CDATA[Test started running:validateEcomercesiteFail at:16]]>
    </line>
    <line>
      <![CDATA[Test started running:validateEcomercesitePass at:16]]>
    </line>
  </reporter-output>
  <suite name="RegressionSuitesecond" duration-ms="8039" started-at="2017-08-16T01:50:53Z" finished-at="2017-08-16T01:51:02Z">
    <groups>
    </groups>
    <test name="FirstTests" duration-ms="7928" started-at="2017-08-16T01:50:53Z" finished-at="2017-08-16T01:51:01Z">
      <class name="testScript.TestCaseReport">
        <test-method status="PASS" signature="open()[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="open" is-config="true" duration-ms="5305" started-at="2017-08-16T07:20:53Z" finished-at="2017-08-16T07:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="beforeMethod" is-config="true" duration-ms="20" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:20:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScript.TestCaseReport.FailedtestCase1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="FailedtestCase1()[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="FailedtestCase1" duration-ms="23" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:20:59Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:304)
	at org.testng.Assert.assertEquals(Assert.java:314)
	at testScript.TestCaseReport.FailedtestCase1(TestCaseReport.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test started running:FailedtestCase1 at:16]]>
            </line>
          </reporter-output>
        </test-method> <!-- FailedtestCase1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="afterMethod" is-config="true" duration-ms="3" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:20:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FailedtestCase1 status=FAILURE method=TestCaseReport.FailedtestCase1()[pri:0, instance:testScript.TestCaseReport@7a187f14] output=Test started running:FailedtestCase1 at:16]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:20:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScript.TestCaseReport.PassedTestCaseTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="PassedTestCaseTest()[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="PassedTestCaseTest" duration-ms="4" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:20:59Z">
          <reporter-output>
            <line>
              <![CDATA[Test started running:PassedTestCaseTest at:16]]>
            </line>
          </reporter-output>
        </test-method> <!-- PassedTestCaseTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:20:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassedTestCaseTest status=SUCCESS method=TestCaseReport.PassedTestCaseTest()[pri:0, instance:testScript.TestCaseReport@7a187f14] output=Test started running:PassedTestCaseTest at:16]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:20:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScript.TestCaseReport.passedtestCase()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="passedtestCase()[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="passedtestCase" duration-ms="2" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:20:59Z">
          <reporter-output>
            <line>
              <![CDATA[Test started running:passedtestCase at:16]]>
            </line>
          </reporter-output>
        </test-method> <!-- passedtestCase -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="endTest" is-config="true" duration-ms="2504" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScript.TestCaseReport@7a187f14]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-08-16T07:20:59Z" finished-at="2017-08-16T07:20:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passedtestCase status=SUCCESS method=TestCaseReport.passedtestCase()[pri:0, instance:testScript.TestCaseReport@7a187f14] output=Test started running:passedtestCase at:16]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testScript.TestCaseReport -->
    </test> <!-- FirstTests -->
    <test name="secondTests" duration-ms="9" started-at="2017-08-16T01:51:01Z" finished-at="2017-08-16T01:51:01Z">
      <class name="testScript.TestCaseReport1">
        <test-method status="FAIL" signature="ValidateLoginTestcaseWithInValidData()[pri:0, instance:testScript.TestCaseReport1@29b5cd00]" name="ValidateLoginTestcaseWithInValidData" duration-ms="1" started-at="2017-08-16T07:21:01Z" finished-at="2017-08-16T07:21:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:304)
	at org.testng.Assert.assertEquals(Assert.java:314)
	at testScript.TestCaseReport1.ValidateLoginTestcaseWithInValidData(TestCaseReport1.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test started running:ValidateLoginTestcaseWithInValidData at:16]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateLoginTestcaseWithInValidData -->
        <test-method status="PASS" signature="ValidateLoginTestcaseWithValidData()[pri:0, instance:testScript.TestCaseReport1@29b5cd00]" name="ValidateLoginTestcaseWithValidData" duration-ms="1" started-at="2017-08-16T07:21:01Z" finished-at="2017-08-16T07:21:01Z">
          <reporter-output>
            <line>
              <![CDATA[Test started running:ValidateLoginTestcaseWithValidData at:16]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateLoginTestcaseWithValidData -->
        <test-method status="PASS" signature="ValidateLoginTestcaseWithValidandInvalidData()[pri:0, instance:testScript.TestCaseReport1@29b5cd00]" name="ValidateLoginTestcaseWithValidandInvalidData" duration-ms="0" started-at="2017-08-16T07:21:01Z" finished-at="2017-08-16T07:21:01Z">
          <reporter-output>
            <line>
              <![CDATA[Test started running:ValidateLoginTestcaseWithValidandInvalidData at:16]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateLoginTestcaseWithValidandInvalidData -->
      </class> <!-- testScript.TestCaseReport1 -->
    </test> <!-- secondTests -->
    <test name="ThirdTestCase" duration-ms="21" started-at="2017-08-16T01:51:01Z" finished-at="2017-08-16T01:51:02Z">
      <class name="testScript.TestCaseReport2">
        <test-method status="PASS" signature="validateEcomercesite()[pri:0, instance:testScript.TestCaseReport2@25af5db5]" name="validateEcomercesite" duration-ms="1" started-at="2017-08-16T07:21:01Z" finished-at="2017-08-16T07:21:01Z">
          <reporter-output>
            <line>
              <![CDATA[Test started running:validateEcomercesite at:16]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEcomercesite -->
        <test-method status="FAIL" signature="validateEcomercesiteFail()[pri:0, instance:testScript.TestCaseReport2@25af5db5]" name="validateEcomercesiteFail" duration-ms="1" started-at="2017-08-16T07:21:01Z" finished-at="2017-08-16T07:21:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:304)
	at org.testng.Assert.assertEquals(Assert.java:314)
	at testScript.TestCaseReport2.validateEcomercesiteFail(TestCaseReport2.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test started running:validateEcomercesiteFail at:16]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEcomercesiteFail -->
        <test-method status="PASS" signature="validateEcomercesitePass()[pri:0, instance:testScript.TestCaseReport2@25af5db5]" name="validateEcomercesitePass" duration-ms="9" started-at="2017-08-16T07:21:01Z" finished-at="2017-08-16T07:21:01Z">
          <reporter-output>
            <line>
              <![CDATA[Test started running:validateEcomercesitePass at:16]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEcomercesitePass -->
      </class> <!-- testScript.TestCaseReport2 -->
    </test> <!-- ThirdTestCase -->
  </suite> <!-- RegressionSuitesecond -->
</testng-results>
